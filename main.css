/* Variables */
/* :root selector matches the root element (html) of the document.
   Varibles here may be used globally throughout the file. */
:root {
	--primary: #c41a1a;
	--business: #295ec7;
    /* OLAYENI ADDED */
    --secondary: #dcb43b;
    /* var( ) insers the value of a CSS variable into another variable*/
	--personal: var(--primary);
	--light: #EEE;
	--grey: #888;
	--dark: #313154;
	--danger: #d50400;

    /* horizonal | vertical | blur | color */
	--shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

	--business-glow: 0px 0px 4px rgba(58, 130, 238, 0.75);
	--personal-glow: 0px 0px 4px rgba(234, 64, 164, 0.75);
    --secondary-glow: 0px 0px 4px rgba(247, 220, 68, 0.75);
}
/* End of Variables */

/* Resets - a list of rules for all browsers on which the page appears. */
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	/*font-family: 'montserrat', sans-serif;*/
    /* OLAYENI ADDED */
    font-family: 'Open Sans', sans-serif;
}

/* :not[...] allows for certain selectors to be excluded from a style change. */
input:not([type="radio"]):not([type="checkbox"]), button {
	appearance: none;
	border: none;
	outline: none;
	background: none;
	cursor: initial;
}
/* End of Resets */

/* Generally, CSS works in the following format:
   selector { declaration } whereby the selector points to an HTML element
   and the declaration contains properites and values that define the style.  */
body {
	background: var(--light);
	color: var(--dark);
}

/* rem stands for root em, a unit of measurement font sizes of root elements. */
section {
	margin-top: 2rem;
	margin-bottom: 2rem;
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}

h3 {
	color: var(--dark);
	font-size: 1rem;
	font-weight: 400;
	margin-bottom: 0.5rem;
}

h4 {
	color: var(--grey);
	font-size: 0.875rem;
	font-weight: 700;
	margin-bottom: 0.5rem;
}

/* Greeting is established in the index.html. */
.greeting .title {
    /*flex sets flexible length on the items*/
    margin-left: flex;
}

/* This styles the input object within the greeting section and title h2. */
.greeting .title input {
	margin-left: flex;
	flex: 1 1 0%;
	min-width: 0;
}

/* A comma between two selectors applies the same declaration to both. */
.greeting .title, 
.greeting .title input {
	color: var(--dark);
	font-size: 1.5rem;
	font-weight: 700;
}

/* [type="text"] specifices the type of input that we are editing in the 
   create-todo class. */
.create-todo input[type="text"] {
	display: block;
	width: 100%;
	font-size: 1.125rem;
	padding: 1rem 1.5rem;
	color: var(--dark);
	background-color: #FFF;
	border-radius: 0.5rem;
	box-shadow: var(--shadow);
	margin-bottom: 1.5rem;
}

.create-todo .options {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 1rem;
	margin-bottom: 1.5rem;
}

.create-todo .options label {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	background-color: #FFF;
	padding: 1.5rem;
	box-shadow: var(--shadow);
	border-radius: 0.5rem;
	cursor: pointer;
}

input[type="radio"],
input[type="checkbox"] {
	display: none;
}

/* Note the bubble id only appears in the main.js but
   style is defined her. */
.bubble {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 20px;
	height: 20px;
	border-radius: 999px;
	border: 2px solid var(--business);
	box-shadow: var(--business-glow);
}

/* This defines the style for the "bubble personal" span element in index.html */
.bubble.personal {
	border-color: var(--personal);
	box-shadow: var(--personal-glow);
}

/* ::after inserts something after a selected element. */
.bubble::after {
	content: '';
	display: block;
	opacity: 0;
	width: 0px;
	height: 0px;
	background-color: var(--business);
	box-shadow: var(--business-glow);
	border-radius: 999px;
	transition: 0.2s ease-in-out;
}

.bubble.personal::after {
	background-color: var(--personal);
	box-shadow: var(--personal-glow);
}

/* ~ symbol is a general sibling selector, selecting all *next* elements
 that are siblings of the specified element. */
input:checked ~ .bubble::after {
	width: 10px;
	height: 10px;
	opacity: 1;
}

.create-todo .options label div {
	color: var(--dark);
	font-size: 1.125rem;
	margin-top: 1rem;
}

.create-todo input[type="submit"] {
	display: block;
	width: 100%;
	font-size: 1.125rem;
	padding: 1rem 1.5rem;
	color: #FFF;
	font-weight: 700;
	/*text-transform: uppercase;*/
	background-color: var(--secondary);
	box-shadow: var(--secondary-glow);
	border-radius: 0.5rem;
	cursor: pointer;
	transition: 0.2s ease-out;
}

.create-todo input[type="submit"]:hover {
	opacity: 0.75;
}

.todo-list .list {
	margin: 1rem 0;
}

.todo-list .todo-item {
	display: flex;
	align-items: center;
	background-color: #FFF;
	padding: 1rem;
	border-radius: 0.5rem;
	box-shadow: var(--shadow);
	margin-bottom: 1rem;
}

.todo-item label {
	display: block;
	margin-right: 1rem;
	cursor: pointer;
}

.todo-item .todo-content {
	flex: 1 1 0%;
}

.todo-item .todo-content input {
	color: var(--dark);
	font-size: 1.125rem;
}

.todo-item .actions {
	display: flex;
	align-items: center;
}

.todo-item .actions button {
	display: block;
	padding: 0.5rem;
	border-radius: 0.25rem;
	color: #FFF;
	cursor: pointer;
	transition: 0.2s ease-in-out;
}

.todo-item .actions button:hover {
	opacity: 0.75;
}

.todo-item .actions .edit {
	margin-right: 0.5rem;
	background-color: var(--business);
}

.todo-item .actions .delete {
	background-color: var(--danger);
}

.todo-item.done .todo-content input {
	text-decoration: line-through;
	color: var(--grey);
}